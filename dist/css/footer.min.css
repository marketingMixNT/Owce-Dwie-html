.footer{position:sticky;bottom:0;left:0;right:0;background-color:#1c1c1c}.footer__container{display:flex;flex-direction:column;justify-content:center;align-items:center;margin:0 auto;padding:2em;max-width:900px}@media (min-width:576px){.footer__container{flex-direction:row;gap:1em;justify-content:space-between}}.footer__logo-section{display:flex;flex-direction:column;justify-content:center;align-items:center}.footer__logo img{width:200px}.footer__columns{display:flex;flex-direction:column;justify-content:center;align-items:center;gap:1em;width:100%;margin-top:1em}@media (min-width:400px){.footer__columns{flex-direction:row;gap:1em}}@media (min-width:576px){.footer__columns{align-items:flex-start;width:50%}}.footer__columns .footer__columns-box{display:flex;flex-direction:column;justify-content:flex-start;align-items:center;width:100%}@media (min-width:400px){.footer__columns .footer__columns-box{width:50%}}.footer__columns .footer__columns-box h6{margin-bottom:.3em;color:#fff}.footer__columns .footer__columns-box a,.footer__columns .footer__columns-box span{color:#fff}.footer__columns .footer__columns-box a:hover{color:#a09f9f!important}.footer__author{margin-top:1em;padding:.5em;border-top:1px solid #fff;display:flex;flex-direction:column;justify-content:center;align-items:center;color:#fff;width:60%;margin:0 auto;max-width:900px;text-align:center}.footer__author a{color:#fff;cursor:pointer;transition:.3s}.footer__author a:hover{font-weight:700;color:#fff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
