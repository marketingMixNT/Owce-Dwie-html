"use strict";var footerYearSpan=document.querySelector(".footer__year"),date=new Date,currentYear=date.getFullYear(),nav=(footerYearSpan&&(footerYearSpan.innerHTML=currentYear),document.querySelector(".desktop-nav-container")),logo=document.querySelector(".nav--logo"),height=250,filterItem=(window.addEventListener("scroll",function(){var e=window.scrollY;logo.style.display=height<=e?"block":"none"}),document.addEventListener("DOMContentLoaded",function(){function e(){t&&-1!==document.cookie.indexOf("Privacy Policy")?t.classList.add("hidden"):t&&t.classList.remove("hidden")}var t=document.querySelector("#cookieBox"),n=document.querySelector("#acceptBtn");e(),n&&n.addEventListener("click",function(){document.cookie="Privacy Policy; max-age=2592000",e()})}),document.querySelector(".items-links")),filterImages=document.querySelectorAll(".project-img"),filterInfo=document.querySelector(".info");filterItem&&0<filterImages.length&&window.addEventListener("load",function(){var n="rodzinny-deluxe";filterImages.forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n?"block":"none"}),filterInfo&&filterInfo.querySelectorAll("[data-name]").forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n?"block":"none"}),filterItem.querySelector('[data-name="'.concat(n,'"]')).classList.add("menu-active"),filterItem.addEventListener("click",function(e){var n;e.target.classList.contains("item-link")&&(document.querySelector(".menu-active").classList.remove("menu-active"),e.target.classList.add("menu-active"),n=e.target.getAttribute("data-name"),filterImages.forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n||"all"===n?"block":"none"}),filterInfo)&&filterInfo.querySelectorAll("[data-name]").forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n||"all"===n?"block":"none"})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZm9vdGVyWWVhclNwYW4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjdXJyZW50WWVhciIsImRhdGUiLCJnZXRGdWxsWWVhciIsImhlaWdodCIsImlubmVySFRNTCIsImxvZ28iLCJhZGRFdmVudExpc3RlbmVyIiwiYWN0dWFsUG9zIiwiZmlsdGVySXRlbSIsIndpbmRvdyIsInNjcm9sbFkiLCJzdHlsZSIsImRpc3BsYXkiLCJjb29raWVCb3giLCJyZW1vdmUiLCJjaGVja0Nvb2tpZSIsImluZGV4T2YiLCJmaWx0ZXJJbWFnZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiYWNjZXB0QnRuIiwiZmlsdGVySW1hZ2VOYW1lIiwiaW1hZ2UiLCJpbmZvTmFtZSIsImluZm9JdGVtIiwiZ2V0QXR0cmlidXRlIiwiaW5pdGlhbEZpbHRlciIsImZpbHRlckluZm8iLCJzZWxlY3RlZEl0ZW0iLCJjbGFzc0xpc3QiLCJ0YXJnZXQiLCJmb3JFYWNoIiwiYWRkIiwiZmlsdGVyTmFtZSIsImNvbnRhaW5zIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFNQSxlQUFpQkMsU0FBU0MsY0FBYyxlQUFlLEVBQXZERixLQUFBQSxJQUFBQSxLQUlBRyxZQUFjQyxLQUFLQyxZQUFhLEVBV2hDQyxLQU5OTixpQkFESUEsZUFBZU8sVUFBWUosYUFPbkJGLFNBQU1DLGNBQUEsd0JBQUEsR0FHWk0sS0FBQ0MsU0FBQUEsY0FBMkIsWUFBTSxFQUdoQ0MsT0FBUyxJQXVDWEMsWUExQ05DLE9BU1FKLGlCQUFrQixTQUFPLFdBRzdCLElBQUFFLEVBQUFFLE9BQUFDLFFBR0pMLEtBQUFNLE1BQUFDLFFBWnFCVCxRQUFiSSxFQVlSLFFBTTBCLE1BUjFCLENBQUMsRUFHRFQsU0FhWWUsaUJBQW9CQyxtQkFBZ0IsV0FZaEQsU0FBQUMsSUFDTVAsR0FBbUQsQ0FBQSxJQUE5QlYsU0FBQ0MsT0FBY2lCLFFBQUEsZ0JBQWUsRUFDbkRDLEVBQWVuQixVQUFTb0IsSUFBQUEsUUFBZ0IsRUFDM0JwQixHQUVmVSxFQUFjUyxVQUFhRSxPQUFNLFFBQU0sQ0FFbkMsQ0FsQkEsSUFBQU4sRUFBQWYsU0FBQUMsY0FBQSxZQUFBLEVBQ0hxQixFQUFBdEIsU0FBQUMsY0FBQSxZQUFBLEVBRURnQixFQWtCWU0sRUFFQUMsR0FDSEYsRUFBTWQsaUJBQUEsUUFuQkEsV0FDWGMsU0FBVWQsT0FBQUEsa0NBQ2RTLEVBQUEsQ0FDRixDQWdCaUIsQ0FoQm5CLENBQUMsRUF1Qm1CUSxTQUFXQyxjQUFTQyxjQUF3QixHQWxCMURSLGFBbUJzQm5CLFNBQUs0QixpQkFBZSxjQUFBLEVBbEIxQ0MsV0FtQnVCaEIsU0FBTUMsY0FBaUIsT0FBQSxFQWpCaERKLFlBbUJ5QyxFQUFqQlMsYUFBT0wsUUFsQi9CSCxPQW1CWUgsaUJBQUEsT0FBQSxXQUNGLElBQUFvQixFQUFBLGtCQUdObEIsYUFBV1QsUUFBYSxTQUFBdUIsR0FFeEJkLElBQVdGLEVBQWlCZ0IsRUFBT0csYUFBR0csV0FBWSxFQUVsQ04sRUFBQ3ZCLE1BQUFBLFFBRFQ2QixJQUFvQkMsRUFDRyxRQUVPQyxNQW5CdEMsQ0FBQyxFQXdCZVIsWUFDSEssV0FBTVQsaUJBQUEsYUFBQSxFQUFBYSxRQUFBLFNBQUFQLEdBQ0hGLElBQU1YLEVBQWFhLEVBQVNDLGFBQUEsV0FBQSxFQUVsQ0QsRUFBQWIsTUFBQUMsUUFERVcsSUFBQUcsRUFDRixRQUc4QixNQUV4QixDQUFBLEVBcEJoQmxCLFdBdUJvQmdCLGNBQWVaLGVBQUFBLE9BQWdCYyxFQUFBLElBQUEsQ0FBQSxFQUFBRyxVQUFBRyxJQUFBLGFBQUEsRUFyQm5EeEIsV0F1QmNGLGlCQUFBLFFBQUEsU0FBQXNCLEdBQ04sSUFHVkssRUFIVUwsRUFBQUUsT0FBQUQsVUFBQUssU0FBQSxXQUFBLElBQ0pwQyxTQUFBQyxjQUFBLGNBQUEsRUFBQThCLFVBQUFmLE9BQUEsYUFBQSxFQUNGYyxFQUFBRSxPQUFBRCxVQUFBRyxJQUFBLGFBQUEsRUFDSkMsRUFBQUwsRUFBQUUsT0FBQUwsYUFBQSxXQUFBLEVBckJVUixhQUFhYyxRQUFRLFNBQUNULEdBQ2xCLElBQUlELEVBQWtCQyxFQUFNRyxhQUFhLFdBQVcsRUFFaERILEVBQU1YLE1BQU1DLFFBRFpTLElBQW9CWSxHQUE2QixRQUFmQSxFQUNaLFFBRUEsTUFFOUIsQ0FBQyxFQUVHTixhQUNBQSxXQUFXVCxpQkFBaUIsYUFBYSxFQUFFYSxRQUFRLFNBQUNQLEdBQ2hELElBQUlELEVBQVdDLEVBQVNDLGFBQWEsV0FBVyxFQUU1Q0QsRUFBU2IsTUFBTUMsUUFEZlcsSUFBYVUsR0FBNkIsUUFBZkEsRUFDRixRQUVBLE1BRWpDLENBQUMsQ0FHYixDQUFDLENBQ0wsQ0FBQyIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vRk9PVEVSIFlFQVJcbmNvbnN0IGZvb3RlclllYXJTcGFuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvb3Rlcl9feWVhcicpXG5cbmNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpXG5cbmNvbnN0IGN1cnJlbnRZZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpXG5cblxuaWYoZm9vdGVyWWVhclNwYW4pe1xuICAgIGZvb3RlclllYXJTcGFuLmlubmVySFRNTCA9IGN1cnJlbnRZZWFyXG59XG5cbi8vTkFWIENIQU5HRVxuY29uc3QgbmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kZXNrdG9wLW5hdi1jb250YWluZXJcIik7XG5jb25zdCBsb2dvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdi0tbG9nbycpXG5cbmNvbnN0IGhlaWdodCA9IDI1MDtcblxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCAoKSA9PiB7XG4gICAgY29uc3QgYWN0dWFsUG9zID0gd2luZG93LnNjcm9sbFk7XG5cbiAgICBpZiAoYWN0dWFsUG9zID49IGhlaWdodCkge1xuICAgICAgICBsb2dvLnN0eWxlLmRpc3BsYXk9J2Jsb2NrJ1xuXG4gICAgIFxuXG4gICAgfWVsc2V7XG4gICAgICAgIGxvZ28uc3R5bGUuZGlzcGxheT0nbm9uZSdcblxuICAgICAgICBcbiAgICB9XG59KTtcblxuLy9DT09LSUUgQkFSXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgY29uc3QgY29va2llQm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb29raWVCb3hcIik7XG4gICAgY29uc3QgYWNjZXB0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhY2NlcHRCdG5cIik7XG5cbiAgICBjb25zdCBhZGRDb29raWUgPSAoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IFwiUHJpdmFjeSBQb2xpY3k7IG1heC1hZ2U9XCIgKyA2MCAqIDYwICogMjQgKiAzMDtcbiAgICAgICAgY2hlY2tDb29raWUoKTtcbiAgICB9O1xuXG4gICAgY29uc3QgY2hlY2tDb29raWUgPSAoKSA9PiB7XG4gICAgICAgIGlmIChjb29raWVCb3ggJiYgZG9jdW1lbnQuY29va2llLmluZGV4T2YoXCJQcml2YWN5IFBvbGljeVwiKSAhPT0gLTEpIHtcbiAgICAgICAgICAgIGNvb2tpZUJveC5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGNvb2tpZUJveCkge1xuICAgICAgICAgICAgY29va2llQm94LmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY2hlY2tDb29raWUoKTtcblxuICAgIGlmIChhY2NlcHRCdG4pIHtcbiAgICAgICAgYWNjZXB0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBhZGRDb29raWUpO1xuICAgIH1cbn0pO1xuXG5cbi8vR0FMTEVSWSBcbmNvbnN0IGZpbHRlckl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaXRlbXMtbGlua3MnKTtcbmNvbnN0IGZpbHRlckltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qZWN0LWltZycpO1xuY29uc3QgZmlsdGVySW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbmZvJyk7XG5cbmlmIChmaWx0ZXJJdGVtICYmIGZpbHRlckltYWdlcy5sZW5ndGggPiAwKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGluaXRpYWxGaWx0ZXIgPSAncm9kemlubnktZGVsdXhlJztcblxuICAgICAgICBmaWx0ZXJJbWFnZXMuZm9yRWFjaCgoaW1hZ2UpID0+IHtcbiAgICAgICAgICAgIGxldCBmaWx0ZXJJbWFnZU5hbWUgPSBpbWFnZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScpO1xuICAgICAgICAgICAgaWYgKGZpbHRlckltYWdlTmFtZSA9PT0gaW5pdGlhbEZpbHRlcikge1xuICAgICAgICAgICAgICAgIGltYWdlLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGltYWdlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGZpbHRlckluZm8pIHtcbiAgICAgICAgICAgIGZpbHRlckluZm8ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbmFtZV0nKS5mb3JFYWNoKChpbmZvSXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBpbmZvTmFtZSA9IGluZm9JdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJyk7XG4gICAgICAgICAgICAgICAgaWYgKGluZm9OYW1lID09PSBpbml0aWFsRmlsdGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGluZm9JdGVtLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaW5mb0l0ZW0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZmlsdGVySXRlbS5xdWVyeVNlbGVjdG9yKGBbZGF0YS1uYW1lPVwiJHtpbml0aWFsRmlsdGVyfVwiXWApLmNsYXNzTGlzdC5hZGQoJ21lbnUtYWN0aXZlJyk7XG5cbiAgICAgICAgZmlsdGVySXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChzZWxlY3RlZEl0ZW0pID0+IHtcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZEl0ZW0udGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnaXRlbS1saW5rJykpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudS1hY3RpdmUnKS5jbGFzc0xpc3QucmVtb3ZlKCdtZW51LWFjdGl2ZScpO1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkSXRlbS50YXJnZXQuY2xhc3NMaXN0LmFkZCgnbWVudS1hY3RpdmUnKTtcbiAgICAgICAgICAgICAgICBsZXQgZmlsdGVyTmFtZSA9IHNlbGVjdGVkSXRlbS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLW5hbWUnKTtcblxuICAgICAgICAgICAgICAgIGZpbHRlckltYWdlcy5mb3JFYWNoKChpbWFnZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZmlsdGVySW1hZ2VOYW1lID0gaW1hZ2UuZ2V0QXR0cmlidXRlKCdkYXRhLW5hbWUnKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpbHRlckltYWdlTmFtZSA9PT0gZmlsdGVyTmFtZSB8fCBmaWx0ZXJOYW1lID09PSAnYWxsJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2Uuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgaWYgKGZpbHRlckluZm8pIHtcbiAgICAgICAgICAgICAgICAgICAgZmlsdGVySW5mby5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1uYW1lXScpLmZvckVhY2goKGluZm9JdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaW5mb05hbWUgPSBpbmZvSXRlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZm9OYW1lID09PSBmaWx0ZXJOYW1lIHx8IGZpbHRlck5hbWUgPT09ICdhbGwnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5mb0l0ZW0uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5mb0l0ZW0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuIl19
